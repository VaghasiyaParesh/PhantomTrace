name: PhantomTrace CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # ============================================================================
  # BUILD & TEST
  # ============================================================================
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build application
      run: cargo build --release --verbose

    - name: Run tests
      run: cargo test --all-features --verbose

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: phantomtrace-linux
        path: target/release/phantomtrace
        retention-days: 30

  # ============================================================================
  # RELEASE BUILDS (on tags)
  # ============================================================================
  release:
    name: Release Build
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: phantomtrace
            asset_name: phantomtrace-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: phantomtrace.exe
            asset_name: phantomtrace-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: phantomtrace
            asset_name: phantomtrace-macos-x86_64

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }} --verbose

    - name: Upload release asset
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact }}
        retention-days: 90
